/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.*;

import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chinche
 */
public class IncapacitateMiner extends javax.swing.JDialog
{

    int mineIndex = 0;
    int minerIndex = 0;
    LinkedList<Mine> myMines;
    String status = "";
    LinkedList<Miner> myMiners = new LinkedList<>();

    /**
     * Creates new form IncapacitateMiner
     *
     * @param parent
     * @param modal
     * @param listMines
     */
    public IncapacitateMiner(java.awt.Frame parent, boolean modal, LinkedList<Mine> listMines)
    {
        super(parent, modal);
        initComponents();
        this.myMines = listMines;
        this.minersToList(this.myMines);
        this.load();

        this.setVisible(true);
    }

    public void load()
    {

        this.minerIndex = 0;
        this.mineIndex = 0;
        this.jComboBox1.removeAllItems();
        DefaultTableModel modelo2 = (DefaultTableModel) this.jTable1.getModel();
        int rows = modelo2.getRowCount();
        for (int i = 0; i < rows; i++)
        {
            modelo2.removeRow(0);
        }
        this.jTable1.removeAll();
        for (Mine m : this.myMines)
        {

            for (Miner mi : m.getListMiners())
            {
                if (mi.isStatus())
                    this.status = "Activo";
                else
                    this.status = "Incapacitado";

                String[] datos =
                {
                    this.minerIndex + "", mi.getNombre() + "", this.status, "Mina " + (m.getId() + 1)
                };
                this.jComboBox1.addItem(this.minerIndex + "");
                modelo2.addRow(datos);
                this.minerIndex++;
            }
            this.mineIndex++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "Nombre", "Estado", "Mina"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N

        jButton1.setText("Ejecutar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void minersToList(LinkedList<Mine> listMines)
    {
        for (Mine m : listMines)
        {
            for (Miner mi : m.getListMiners())
            {
                this.myMiners.addLast(mi);
            }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        if (this.myMiners.get(Integer.parseInt(this.jComboBox1.getSelectedItem().toString())).isStatus())
            this.myMiners.get(Integer.parseInt(this.jComboBox1.getSelectedItem().toString())).setStatus(false);
        else
            this.myMiners.get(Integer.parseInt(this.jComboBox1.getSelectedItem().toString())).setStatus(true);
        this.load();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
