/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.*;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author darkd
 * @param <T>
 */
public class PanelOfBuilder<T> extends javax.swing.JPanel
{

    private Mine mine;

    /**
     * Creates new form PanelMaker
     */
    public PanelOfBuilder()
    {
        initComponents();
        this.setBackground(Color.black);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        if (this.mine != null)
            for (int i = 0; i < this.mine.getMatrix().size(); i++)
            {
                for (int j = 0; j < this.mine.getMatrix().get(i).size(); j++)
                {
                    if (this.mine.getMatrix().get(i).get(j).getObject() instanceof Wall)
                    {
                        Wall p = (Wall) this.mine.getMatrix().get(i).get(j).getObject();
                        g.setColor(Color.black);
                        g.fillRect(p.getX(), p.getY(), p.getWidth(), p.getHeight());
                        g.setColor(Color.white);
                        g.drawRect(p.getX(), p.getY(), p.getWidth(), p.getHeight());
                        //g.drawImage(p.getImage().getImage(), p.getX(), p.getY(), p.getWidth(), p.getHeight(), this);
                    }
                    if (this.mine.getMatrix().get(i).get(j).getObject() instanceof Road)
                    {
                        Road p = (Road) this.mine.getMatrix().get(i).get(j).getObject();
                        if (p.isEntry())
                            g.setColor(Color.blue);
                        else
                            g.setColor(Color.yellow);
                        g.fillRect(p.getX(), p.getY(), p.getWidth(), p.getHeight());
                        g.setColor(Color.white);
                        g.drawRect(p.getX(), p.getY(), p.getWidth(), p.getHeight());
                        // g.drawImage(p.getImage().getImage(), p.getX(), p.getY(), p.getWidth(), p.getHeight(), this);
                    }
                    if (this.mine.getMatrix().get(i).get(j).getObject() instanceof Deposit)
                    {
                        Deposit d = (Deposit) this.mine.getMatrix().get(i).get(j).getObject();
                        g.setColor(Color.green);
                        g.fillRect(d.getX(), d.getY(), d.getWidth(), d.getHeight());
                        g.setColor(Color.white);
                        g.drawRect(d.getX(), d.getY(), d.getWidth(), d.getHeight());
                        //g.drawImage(d.getImage().getImage(), d.getX(), d.getY(), d.getWidth(), d.getHeight(), this);
                    }
                }
            }
        repaint();
    }

    /**
     * @return the mine
     */
    public Mine getMine()
    {
        return mine;
    }

    /**
     * @param mine the mine to set
     */
    public void setMine(Mine mine)
    {
        this.mine = mine;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
